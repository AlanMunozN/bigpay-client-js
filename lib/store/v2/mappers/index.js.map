{"version":3,"sources":["../../../../src/store/v2/mappers/index.js"],"names":["mapToInstrumentPayload","mapToHeaders","data","providerName","default_instrument","defaultInstrument","provider","name","credit_card","mapToCreditCard","billing_address","mapToAddress","Authorization","authToken","billingAddress","state","mapToState","provinceCode","province","address_line_1","addressLine1","address_line_2","addressLine2","city","company","country_code","countryCode","email","first_name","firstName","last_name","lastName","phone","postal_code","postCode","code","creditCard","threeDSecure","cardholder_name","cardholderName","number","month","year","verification_code","verificationCode","issue_month","issueMonth","issue_year","issueYear","issue_number","issueNumber","track_data","trackData","is_manual_entry","isManualEntry","icc_data","iccData","fallback_reason","fallbackReason","is_contactless","isContactless","encrypted_pin_cryptogram","encryptedPinCryptogram","encrypted_pin_ksn","encryptedPinKsn","three_d_secure"],"mappings":";;;;;QAUgBA,sB,GAAAA,sB;QAqBAC,Y,GAAAA,Y;;AA/BhB;;AAEA;;;;;;;;AAQO,SAASD,sBAAT,GAA2C;AAAA,QAAXE,IAAW,uEAAJ,EAAI;AAAA,QAE1CC,YAF0C,GAI1CD,IAJ0C,CAE1CC,YAF0C;AAAA,QAGvBC,kBAHuB,GAI1CF,IAJ0C,CAG1CG,iBAH0C;;;AAM9C,QAAMC,WAAW,oBAAQ,EAAEC,MAAMJ,YAAR,EAAR,CAAjB;;AAEA,WAAO,oBAAQ;AACXG,0BADW;AAEXE,qBAAaC,gBAAgBP,IAAhB,CAFF;AAGXQ,yBAAiBC,aAAaT,IAAb,CAHN;AAIXE;AAJW,KAAR,CAAP;AAMH;;AAED;;;;;AAKO,SAASH,YAAT,GAAyD;AAAA,mFAAJ,EAAI;AAAA,QAAtBW,aAAsB,QAAjCC,SAAiC;;AAC5D,WAAO,oBAAQ;AACXD;AADW,KAAR,CAAP;AAGH;;AAED;;;;AAIA,SAASD,YAAT,QAA+C;AAAA,qCAAvBG,cAAuB;AAAA,QAAvBA,cAAuB,wCAAN,EAAM;;AAC3C,QAAMC,QAAQC,WAAWF,eAAeG,YAA1B,EAAwCH,eAAeI,QAAvD,CAAd;;AAEA,WAAO,oBAAQ;AACXC,wBAAgBL,eAAeM,YADpB;AAEXC,wBAAgBP,eAAeQ,YAFpB;AAGXC,cAAMT,eAAeS,IAHV;AAIXC,iBAASV,eAAeU,OAJb;AAKXC,sBAAcX,eAAeY,WALlB;AAMXC,eAAOb,eAAea,KANX;AAOXC,oBAAYd,eAAee,SAPhB;AAQXC,mBAAWhB,eAAeiB,QARf;AASXC,eAAOlB,eAAekB,KATX;AAUXC,qBAAanB,eAAeoB,QAVjB;AAWXnB;AAXW,KAAR,CAAP;AAaH;;AAED;;;;;AAKA,SAASC,UAAT,CAAoBmB,IAApB,EAA0B5B,IAA1B,EAAgC;AAC5B,WAAO,oBAAQ;AACX4B,kBADW;AAEX5B;AAFW,KAAR,CAAP;AAIH;;AAED;;;;;AAKA,SAASE,eAAT,QAA8C;AAAA,iCAAnB2B,UAAmB;AAAA,QAAnBA,UAAmB,oCAAN,EAAM;;AAC1C,QAAMC,eAAe,oBAAQD,WAAWC,YAAnB,CAArB;;AAEA,WAAO,oBAAQ;AACXC,yBAAiBF,WAAWG,cADjB;AAEXC,gBAAQJ,WAAWI,MAFR;AAGXC,eAAOL,WAAWK,KAHP;AAIXC,cAAMN,WAAWM,IAJN;AAKXC,2BAAmBP,WAAWQ,gBALnB;AAMXC,qBAAaT,WAAWU,UANb;AAOXC,oBAAYX,WAAWY,SAPZ;AAQXC,sBAAcb,WAAWc,WARd;AASXC,oBAAYf,WAAWgB,SATZ;AAUXC,yBAAiBjB,WAAWkB,aAVjB;AAWXC,kBAAUnB,WAAWoB,OAXV;AAYXC,yBAAiBrB,WAAWsB,cAZjB;AAaXC,wBAAgBvB,WAAWwB,aAbhB;AAcXC,kCAA0BzB,WAAW0B,sBAd1B;AAeXC,2BAAmB3B,WAAW4B,eAfnB;AAgBXC,wBAAgB5B;AAhBL,KAAR,CAAP;AAkBH","file":"index.js","sourcesContent":["import { omitNil } from '../../../common/utils';\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.billingAddress\n * @param {CreditCard} data.creditCard\n * @param {boolean} data.defaultInstrument\n * @param {string} data.providerName\n * @return {Object}\n */\nexport function mapToInstrumentPayload(data = {}) {\n    const {\n        providerName,\n        defaultInstrument: default_instrument,\n    } = data;\n\n    const provider = omitNil({ name: providerName });\n\n    return omitNil({\n        provider,\n        credit_card: mapToCreditCard(data),\n        billing_address: mapToAddress(data),\n        default_instrument,\n    });\n}\n\n/**\n * @param {Object} data\n * @param {string} data.authToken\n * @return {Object}\n */\nexport function mapToHeaders({ authToken: Authorization } = {}) {\n    return omitNil({\n        Authorization,\n    });\n}\n\n/**\n * @param {AddressData} data\n * @return {Object}\n */\nfunction mapToAddress({ billingAddress = {} }) {\n    const state = mapToState(billingAddress.provinceCode, billingAddress.province);\n\n    return omitNil({\n        address_line_1: billingAddress.addressLine1,\n        address_line_2: billingAddress.addressLine2,\n        city: billingAddress.city,\n        company: billingAddress.company,\n        country_code: billingAddress.countryCode,\n        email: billingAddress.email,\n        first_name: billingAddress.firstName,\n        last_name: billingAddress.lastName,\n        phone: billingAddress.phone,\n        postal_code: billingAddress.postCode,\n        state,\n    });\n}\n\n/**\n * @param {string} code\n * @param {string} name\n * @return {Object}\n */\nfunction mapToState(code, name) {\n    return omitNil({\n        code,\n        name,\n    });\n}\n\n/**\n * @param {Object} data\n * @param {CreditCard} data.creditCard\n * @return {Object}\n */\nfunction mapToCreditCard({ creditCard = {} }) {\n    const threeDSecure = omitNil(creditCard.threeDSecure);\n\n    return omitNil({\n        cardholder_name: creditCard.cardholderName,\n        number: creditCard.number,\n        month: creditCard.month,\n        year: creditCard.year,\n        verification_code: creditCard.verificationCode,\n        issue_month: creditCard.issueMonth,\n        issue_year: creditCard.issueYear,\n        issue_number: creditCard.issueNumber,\n        track_data: creditCard.trackData,\n        is_manual_entry: creditCard.isManualEntry,\n        icc_data: creditCard.iccData,\n        fallback_reason: creditCard.fallbackReason,\n        is_contactless: creditCard.isContactless,\n        encrypted_pin_cryptogram: creditCard.encryptedPinCryptogram,\n        encrypted_pin_ksn: creditCard.encryptedPinKsn,\n        three_d_secure: threeDSecure,\n    });\n}\n"]}