{"version":3,"sources":["../../src/store/store-request-sender.js"],"names":["StoreRequestSender","config","urlHelper","create","requestSender","data","callback","url","getTokenUrl","storeId","shopperId","options","headers","postRequest","getInstrumentsUrl","sendRequest","payload","getInstrumentByIdUrl","instrumentId","method"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;IAEqBA,kB;;;;AACjB;;;;+BAIcC,M,EAAQ;AAClB,gBAAMC,YAAY,oBAAUC,MAAV,CAAiBF,MAAjB,CAAlB;AACA,gBAAMG,gBAAgB,wBAAcD,MAAd,EAAtB;;AAEA,mBAAO,IAAIH,kBAAJ,CAAuBE,SAAvB,EAAkCE,aAAlC,CAAP;AACH;;AAED;;;;;;;;AAKA,gCAAYF,SAAZ,EAAuBE,aAAvB,EAAsC;AAAA;;AAClC;;;;AAIA,aAAKF,SAAL,GAAiBA,SAAjB;;AAEA;;;;AAIA,aAAKE,aAAL,GAAqBA,aAArB;AACH;;AAED;;;;;;;;;wCAKgBC,I,EAAMC,Q,EAAU;AAC5B,gBAAMC,MAAM,KAAKL,SAAL,CAAeM,WAAf,CAA2BH,KAAKI,OAAhC,EAAyCJ,KAAKK,SAA9C,CAAZ;AACA,gBAAMC,UAAU;AACZC,yBAAS,2BAAaP,IAAb;AADG,aAAhB;;AAIA,iBAAKD,aAAL,CAAmBS,WAAnB,CAA+BN,GAA/B,EAAoC,IAApC,EAA0CI,OAA1C,EAAmDL,QAAnD;AACH;;AAED;;;;;;;;8CAKsBD,I,EAAMC,Q,EAAU;AAClC,gBAAMC,MAAM,KAAKL,SAAL,CAAeY,iBAAf,CAAiCT,KAAKI,OAAtC,EAA+CJ,KAAKK,SAApD,CAAZ;AACA,gBAAMC,UAAU;AACZC,yBAAS,2BAAaP,IAAb;AADG,aAAhB;;AAIA,iBAAKD,aAAL,CAAmBW,WAAnB,CAA+BR,GAA/B,EAAoC,IAApC,EAA0CI,OAA1C,EAAmDL,QAAnD;AACH;;AAED;;;;;;;;8CAKsBD,I,EAAMC,Q,EAAU;AAClC,gBAAMC,MAAM,KAAKL,SAAL,CAAeY,iBAAf,CAAiCT,KAAKI,OAAtC,EAA+CJ,KAAKK,SAApD,CAAZ;AACA,gBAAMM,UAAU,qCAAuBX,IAAvB,CAAhB;AACA,gBAAMM,UAAU;AACZC,yBAAS,2BAAaP,IAAb;AADG,aAAhB;;AAIA,iBAAKD,aAAL,CAAmBS,WAAnB,CAA+BN,GAA/B,EAAoCS,OAApC,EAA6CL,OAA7C,EAAsDL,QAAtD;AACH;;AAED;;;;;;;;gDAKwBD,I,EAAMC,Q,EAAU;AACpC,gBAAMC,MAAM,KAAKL,SAAL,CAAee,oBAAf,CACRZ,KAAKI,OADG,EAERJ,KAAKK,SAFG,EAGRL,KAAKa,YAHG,CAAZ;AAKA,gBAAMP,UAAU;AACZQ,2CADY;AAEZP,yBAAS,2BAAaP,IAAb;AAFG,aAAhB;;AAKA,iBAAKD,aAAL,CAAmBW,WAAnB,CAA+BR,GAA/B,EAAoC,IAApC,EAA0CI,OAA1C,EAAmDL,QAAnD;AACH;;;;;;kBA3FgBN,kB","file":"store-request-sender.js","sourcesContent":["import RequestSender from '../common/http-request/request-sender';\nimport { DELETE } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport { mapToHeaders, mapToInstrumentPayload } from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    getShopperToken(data, callback) {\n        const url = this.urlHelper.getTokenUrl(data.storeId, data.shopperId);\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    getShopperInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(data.storeId, data.shopperId);\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    postShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(data.storeId, data.shopperId);\n        const payload = mapToInstrumentPayload(data);\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.shopperId,\n            data.instrumentId\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n"]}