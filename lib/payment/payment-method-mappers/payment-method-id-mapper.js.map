{"version":3,"sources":["../../../src/payment/payment-method-mappers/payment-method-id-mapper.js"],"names":["PaymentMethodIdMapper","paymentMethod","id","method","gateway"],"mappings":";;;;;;;;AAAA;;AACA;;;;IAEqBA,qB;;;;;;;;;AAQjB;;;;gCAIQC,a,EAAe;AAAA,gBACbC,EADa,GACND,aADM,CACbC,EADa;;;AAGnB,gBAAID,cAAcE,MAAd,qCAAJ,EAA2C;AACvCD,qBAAKD,cAAcG,OAAnB;AACH;;AAED,gBAAIF,yCAAJ,EAA6B;AACzB;AACH;;AAED,mBAAOA,EAAP;AACH;;;;AAvBD;;;iCAGgB;AACZ,mBAAO,IAAIF,qBAAJ,EAAP;AACH;;;;;;kBANgBA,qB","file":"payment-method-id-mapper.js","sourcesContent":["import { BRAINTREE, BRAINTREE_PAYPAL } from '../payment-method-ids';\nimport { MULTI_OPTION } from '../payment-method-types';\n\nexport default class PaymentMethodIdMapper {\n    /**\n     * @returns {PaymentMethodIdMapper}\n     */\n    static create() {\n        return new PaymentMethodIdMapper();\n    }\n\n    /**\n     * @param {PaymentMethod} paymentMethod\n     * @returns {string}\n     */\n    mapToId(paymentMethod) {\n        let { id } = paymentMethod;\n\n        if (paymentMethod.method === MULTI_OPTION) {\n            id = paymentMethod.gateway;\n        }\n\n        if (id === BRAINTREE_PAYPAL) {\n            return BRAINTREE;\n        }\n\n        return id;\n    }\n}\n"]}