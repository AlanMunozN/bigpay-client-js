{"version":3,"sources":["../../../src/payment/mappers/map-to-customer.js"],"names":["mapToCustomer","data","customer","quoteMeta","geo_ip_country_code","request","geoCountryCode","id","customerId","session_token","sessionHash"],"mappings":";;;;;kBAOwBA,a;;AAPxB;;AAEA;;;;;AAKe,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAAA,yBACEA,IADF,CAChCC,QADgC;AAAA,QAChCA,QADgC,kCACrB,EADqB;AAAA,0BACED,IADF,CACjBE,SADiB;AAAA,QACjBA,SADiB,mCACL,EADK;;;AAGxC,WAAO,oBAAQ;AACXC,6BAAqBD,UAAUE,OAAV,GAAoBF,UAAUE,OAAV,CAAkBC,cAAtC,GAAuD,IADjE;AAEXC,YAAI,qBAASL,SAASM,UAAlB,CAFO;AAGXC,uBAAeN,UAAUE,OAAV,GAAoBF,UAAUE,OAAV,CAAkBK,WAAtC,GAAoD;AAHxD,KAAR,CAAP;AAKH","file":"map-to-customer.js","sourcesContent":["import { omitNil, toString } from '../../common/utils';\n\n/**\n * Map to customer\n * @param {PaymentRequestData} data\n * @returns {Object}\n */\nexport default function mapToCustomer(data) {\n    const { customer = {}, quoteMeta = {} } = data;\n\n    return omitNil({\n        geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n        id: toString(customer.customerId),\n        session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n    });\n}\n"]}