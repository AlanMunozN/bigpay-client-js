{"version":3,"sources":["../../../../src/payment/v1/payment-mappers/order-mapper.js"],"names":["OrderMapper","data","order","billing_address","mapToBillingAddress","coupons","mapToCoupons","currency","id","orderId","items","mapToItems","shipping_address","mapToShippingAddress","token","totals","mapToOrderTotals","customer","address","mapToAddress","email","coupon","map","code","addressKey","city","company","country_code","countryCode","country","first_name","firstName","last_name","lastName","phone","state_code","provinceCode","state","province","street_1","addressLine1","street_2","addressLine2","zip","postCode","cart","itemData","name","price","integerAmount","quantity","sku","grand_total","grandTotal","handling","shipping","subtotal","tax","taxTotal"],"mappings":"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","file":"order-mapper.js","sourcesContent":["import { omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map(itemData => omitNil({\n            code: itemData.id,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n"]}