{"version":3,"sources":["../../../../src/payment/v1/payment-mappers/customer-mapper.js"],"names":["CustomerMapper","data","customer","quoteMeta","geo_ip_country_code","request","geoCountryCode","id","customerId","session_token","sessionHash"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,c;;;;;;;;;AAQjB;;;;sCAIcC,I,EAAM;AAAA,iCAC0BA,IAD1B,CACRC,QADQ;AAAA,gBACRA,QADQ,kCACG,EADH;AAAA,kCAC0BD,IAD1B,CACOE,SADP;AAAA,gBACOA,SADP,mCACmB,EADnB;;;AAGhB,mBAAO,oBAAQ;AACXC,qCAAqBD,UAAUE,OAAV,GAAoBF,UAAUE,OAAV,CAAkBC,cAAtC,GAAuD,IADjE;AAEXC,oBAAIL,SAASM,UAAT,GAAsB,qBAASN,SAASM,UAAlB,CAAtB,GAAsD,IAF/C;AAGXC,+BAAeN,UAAUE,OAAV,GAAoBF,UAAUE,OAAV,CAAkBK,WAAtC,GAAoD;AAHxD,aAAR,CAAP;AAKH;;;;AAnBD;;;iCAGgB;AACZ,mBAAO,IAAIV,cAAJ,EAAP;AACH;;;;;;kBANgBA,c","file":"customer-mapper.js","sourcesContent":["import { omitNil, toString } from '../../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {} } = data;\n\n        return omitNil({\n            geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            id: customer.customerId ? toString(customer.customerId) : null,\n            session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n        });\n    }\n}\n"]}