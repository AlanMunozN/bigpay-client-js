{"version":3,"sources":["../../src/client/client.js"],"names":["Client","host","data","callback","paymentMethod","options","type","HOSTED","Error","API"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,M;AACjB;;;;;AAKA,0BAAsB;AAAA,YAARC,IAAQ,QAARA,IAAQ;;AAAA;;AAClB,aAAKA,IAAL,GAAYA,IAAZ;AACH;;AAED;;;;;;;;;;iDAMyBC,I,EAAMC,Q,EAAU;AAAA,sCACND,IADM,CAC7BE,aAD6B;AAAA,gBAC7BA,aAD6B,uCACb,EADa;;AAErC,gBAAMC,UAAU,EAAEJ,MAAM,KAAKA,IAAb,EAAhB;;AAEA,gBAAIG,cAAcE,IAAd,KAAuB,uBAAcC,MAAzC,EAAiD;AAC7C,sBAAM,IAAIC,KAAJ,CAAaJ,cAAcE,IAA3B,wBAAN;AACH;;AAED,mDAAyBJ,IAAzB,EAA+BG,OAA/B,EAAwCF,QAAxC;AACH;;AAED;;;;;;;;;sCAMcD,I,EAAMC,Q,EAAU;AAAA,uCACKD,IADL,CAClBE,aADkB;AAAA,gBAClBA,aADkB,wCACF,EADE;;AAE1B,gBAAMC,UAAU,EAAEJ,MAAM,KAAKA,IAAb,EAAhB;;AAEA,gBAAIG,cAAcE,IAAd,KAAuB,uBAAcG,GAAzC,EAA8C;AAC1C,sBAAM,IAAID,KAAJ,CAAaJ,cAAcE,IAA3B,wBAAN;AACH;;AAED,wCAAcJ,IAAd,EAAoBG,OAApB,EAA6BF,QAA7B;AACH;;;;;;kBA1CgBH,M","file":"client.js","sourcesContent":["import { PAYMENT_TYPES, initializeOffsitePayment, submitPayment } from '../payment';\n\nexport default class Client {\n    /**\n     * Construct BigpayClient\n     * @param {Object} config\n     * @param {string} config.host\n     */\n    constructor({ host }) {\n        this.host = host;\n    }\n\n    /**\n     * Initialize offsite payment\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    initializeOffsitePayment(data, callback) {\n        const { paymentMethod = {} } = data;\n        const options = { host: this.host };\n\n        if (paymentMethod.type !== PAYMENT_TYPES.HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        initializeOffsitePayment(data, options, callback);\n    }\n\n    /**\n     * Submit payment\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n        const options = { host: this.host };\n\n        if (paymentMethod.type !== PAYMENT_TYPES.API) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        submitPayment(data, options, callback);\n    }\n}\n"]}